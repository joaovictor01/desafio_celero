[2022-03-31 19:56:26,304] [DEBUG] (0.004) SELECT "django_celery_results_taskresult"."id", "django_celery_results_taskresult"."task_id", "django_celery_results_taskresult"."periodic_task_name", "django_celery_results_taskresult"."task_name", "django_celery_results_taskresult"."task_args", "django_celery_results_taskresult"."task_kwargs", "django_celery_results_taskresult"."status", "django_celery_results_taskresult"."worker", "django_celery_results_taskresult"."content_type", "django_celery_results_taskresult"."content_encoding", "django_celery_results_taskresult"."result", "django_celery_results_taskresult"."date_created", "django_celery_results_taskresult"."date_done", "django_celery_results_taskresult"."traceback", "django_celery_results_taskresult"."meta" FROM "django_celery_results_taskresult" WHERE "django_celery_results_taskresult"."task_id" = '39c1f834-1b73-45af-ade7-8532c9492be0' LIMIT 21; args=('39c1f834-1b73-45af-ade7-8532c9492be0',)
[2022-03-31 19:56:26,314] [DEBUG] (0.002) INSERT INTO "django_celery_results_taskresult" ("task_id", "periodic_task_name", "task_name", "task_args", "task_kwargs", "status", "worker", "content_type", "content_encoding", "result", "date_created", "date_done", "traceback", "meta") VALUES ('39c1f834-1b73-45af-ade7-8532c9492be0', NULL, 'olympics.tasks.parse_json_content', '"(''/tmp/tmpdxvj2hp3.upload.csv'',)"', '"{}"', 'FAILURE', 'celery@default.bbbb59c0e217', 'application/json', 'utf-8', '{"exc_type": "FileNotFoundError", "exc_message": [2, "No such file or directory"], "exc_module": "builtins"}', '2022-03-31T19:56:26.311716+00:00'::timestamptz, '2022-03-31T19:56:26.311835+00:00'::timestamptz, 'Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/celery/app/trace.py", line 451, in trace_task
    R = retval = fun(*args, **kwargs)
  File "/usr/local/lib/python3.9/site-packages/celery/app/trace.py", line 734, in __protected_call__
    return self.run(*args, **kwargs)
  File "/desafio_celero/olympics/tasks.py", line 15, in parse_json_content
    json_content = csv_to_json(csv_file)
  File "/desafio_celero/olympics/utils.py", line 6, in csv_to_json
    with open(csv_file, ''r'') as f:
FileNotFoundError: [Errno 2] No such file or directory: ''/tmp/tmpdxvj2hp3.upload.csv''
', '{"children": []}') RETURNING "django_celery_results_taskresult"."id"; args=('39c1f834-1b73-45af-ade7-8532c9492be0', None, 'olympics.tasks.parse_json_content', '"(\'/tmp/tmpdxvj2hp3.upload.csv\',)"', '"{}"', 'FAILURE', 'celery@default.bbbb59c0e217', 'application/json', 'utf-8', '{"exc_type": "FileNotFoundError", "exc_message": [2, "No such file or directory"], "exc_module": "builtins"}', datetime.datetime(2022, 3, 31, 19, 56, 26, 311716, tzinfo=<UTC>), datetime.datetime(2022, 3, 31, 19, 56, 26, 311835, tzinfo=<UTC>), 'Traceback (most recent call last):\n  File "/usr/local/lib/python3.9/site-packages/celery/app/trace.py", line 451, in trace_task\n    R = retval = fun(*args, **kwargs)\n  File "/usr/local/lib/python3.9/site-packages/celery/app/trace.py", line 734, in __protected_call__\n    return self.run(*args, **kwargs)\n  File "/desafio_celero/olympics/tasks.py", line 15, in parse_json_content\n    json_content = csv_to_json(csv_file)\n  File "/desafio_celero/olympics/utils.py", line 6, in csv_to_json\n    with open(csv_file, \'r\') as f:\nFileNotFoundError: [Errno 2] No such file or directory: \'/tmp/tmpdxvj2hp3.upload.csv\'\n', '{"children": []}')
[2022-03-31 19:58:18,129] [DEBUG] (0.001) SELECT "olympics_athlete"."id", "olympics_athlete"."name", "olympics_athlete"."sex", "olympics_athlete"."age", "olympics_athlete"."height", "olympics_athlete"."weight", "olympics_athlete"."team", "olympics_athlete"."noc" FROM "olympics_athlete" WHERE "olympics_athlete"."id" = 1 LIMIT 21; args=(1,)
[2022-03-31 19:58:18,132] [DEBUG] (0.001) SELECT "olympics_event"."id", "olympics_event"."name", "olympics_event"."sport" FROM "olympics_event" WHERE "olympics_event"."name" = 'Basketball Men''s Basketball' LIMIT 21; args=("Basketball Men's Basketball",)
[2022-03-31 19:58:18,134] [DEBUG] (0.001) SELECT "olympics_game"."id", "olympics_game"."name", "olympics_game"."year", "olympics_game"."season", "olympics_game"."city" FROM "olympics_game" WHERE "olympics_game"."name" = '1992 Summer' LIMIT 21; args=('1992 Summer',)
[2022-03-31 19:58:18,138] [DEBUG] (0.001) INSERT INTO "olympics_game_events" ("game_id", "event_id") VALUES (1, 1) ON CONFLICT DO NOTHING; args=(1, 1)
[2022-03-31 19:58:18,147] [DEBUG] (0.002) SELECT "olympics_medal"."id", "olympics_medal"."medal", "olympics_medal"."athlete_id", "olympics_medal"."event_id", "olympics_medal"."game_id" FROM "olympics_medal" WHERE ("olympics_medal"."athlete_id" = 1 AND "olympics_medal"."event_id" = 1 AND "olympics_medal"."game_id" = 1) LIMIT 21; args=(1, 1, 1)
[2022-03-31 19:58:18,150] [DEBUG] (0.001) SELECT "olympics_athlete"."id", "olympics_athlete"."name", "olympics_athlete"."sex", "olympics_athlete"."age", "olympics_athlete"."height", "olympics_athlete"."weight", "olympics_athlete"."team", "olympics_athlete"."noc" FROM "olympics_athlete" WHERE "olympics_athlete"."id" = 2 LIMIT 21; args=(2,)
[2022-03-31 19:58:18,152] [DEBUG] (0.000) SELECT "olympics_event"."id", "olympics_event"."name", "olympics_event"."sport" FROM "olympics_event" WHERE "olympics_event"."name" = 'Judo Men''s Extra-Lightweight' LIMIT 21; args=("Judo Men's Extra-Lightweight",)
[2022-03-31 19:58:18,154] [DEBUG] (0.000) SELECT "olympics_game"."id", "olympics_game"."name", "olympics_game"."year", "olympics_game"."season", "olympics_game"."city" FROM "olympics_game" WHERE "olympics_game"."name" = '2012 Summer' LIMIT 21; args=('2012 Summer',)
[2022-03-31 19:58:18,156] [DEBUG] (0.001) INSERT INTO "olympics_game_events" ("game_id", "event_id") VALUES (2, 2) ON CONFLICT DO NOTHING; args=(2, 2)
[2022-03-31 19:58:18,160] [DEBUG] (0.001) SELECT "olympics_medal"."id", "olympics_medal"."medal", "olympics_medal"."athlete_id", "olympics_medal"."event_id", "olympics_medal"."game_id" FROM "olympics_medal" WHERE ("olympics_medal"."athlete_id" = 2 AND "olympics_medal"."event_id" = 2 AND "olympics_medal"."game_id" = 2) LIMIT 21; args=(2, 2, 2)
[2022-03-31 19:58:18,163] [DEBUG] (0.001) SELECT "olympics_athlete"."id", "olympics_athlete"."name", "olympics_athlete"."sex", "olympics_athlete"."age", "olympics_athlete"."height", "olympics_athlete"."weight", "olympics_athlete"."team", "olympics_athlete"."noc" FROM "olympics_athlete" WHERE "olympics_athlete"."id" = 3 LIMIT 21; args=(3,)
[2022-03-31 19:58:18,416] [DEBUG] (0.002) SELECT "django_celery_results_taskresult"."id", "django_celery_results_taskresult"."task_id", "django_celery_results_taskresult"."periodic_task_name", "django_celery_results_taskresult"."task_name", "django_celery_results_taskresult"."task_args", "django_celery_results_taskresult"."task_kwargs", "django_celery_results_taskresult"."status", "django_celery_results_taskresult"."worker", "django_celery_results_taskresult"."content_type", "django_celery_results_taskresult"."content_encoding", "django_celery_results_taskresult"."result", "django_celery_results_taskresult"."date_created", "django_celery_results_taskresult"."date_done", "django_celery_results_taskresult"."traceback", "django_celery_results_taskresult"."meta" FROM "django_celery_results_taskresult" WHERE "django_celery_results_taskresult"."task_id" = 'c0bf68e5-592c-49c2-9b57-50b5d73de3fd' LIMIT 21; args=('c0bf68e5-592c-49c2-9b57-50b5d73de3fd',)
[2022-03-31 19:58:18,419] [DEBUG] (0.002) INSERT INTO "django_celery_results_taskresult" ("task_id", "periodic_task_name", "task_name", "task_args", "task_kwargs", "status", "worker", "content_type", "content_encoding", "result", "date_created", "date_done", "traceback", "meta") VALUES ('c0bf68e5-592c-49c2-9b57-50b5d73de3fd', NULL, 'olympics.tasks.parse_json_content', '"(''/tmp/tmpxvgqs09t.upload.csv'',)"', '"{}"', 'SUCCESS', 'celery@default.bbbb59c0e217', 'application/json', 'utf-8', 'null', '2022-03-31T19:58:18.417484+00:00'::timestamptz, '2022-03-31T19:58:18.417543+00:00'::timestamptz, NULL, '{"children": []}') RETURNING "django_celery_results_taskresult"."id"; args=('c0bf68e5-592c-49c2-9b57-50b5d73de3fd', None, 'olympics.tasks.parse_json_content', '"(\'/tmp/tmpxvgqs09t.upload.csv\',)"', '"{}"', 'SUCCESS', 'celery@default.bbbb59c0e217', 'application/json', 'utf-8', 'null', datetime.datetime(2022, 3, 31, 19, 58, 18, 417484, tzinfo=<UTC>), datetime.datetime(2022, 3, 31, 19, 58, 18, 417543, tzinfo=<UTC>), None, '{"children": []}')
